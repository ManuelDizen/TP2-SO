www.viva64.com/en/w	1	err	Help: The documentation for all analyzer warnings is available here: https://www.viva64.com/en/w/.
/root/Bootloader/BMFS/bmfs.c	239	note	V576 Incorrect format. Consider checking the third actual argument of the 'printf' function. The SIGNED integer type argument is expected.
/root/Bootloader/BMFS/bmfs.c	255	note	V576 Incorrect format. Consider checking the third actual argument of the 'printf' function. The SIGNED integer type argument is expected.
/root/Bootloader/BMFS/bmfs.c	255	note	V576 Incorrect format. Consider checking the fourth actual argument of the 'printf' function. The SIGNED integer type argument is expected.
/root/Bootloader/BMFS/bmfs.c	370	note	V584 The 'diskSize' value is present on both sides of the '>' operator. The expression is incorrect or it can be simplified.
/root/Bootloader/BMFS/bmfs.c	409	note	V576 Incorrect format. Consider checking the second actual argument of the 'printf' function. Under certain conditions the pointer can be null.
/root/Bootloader/BMFS/bmfs.c	453	note	V575 The potential null pointer is passed into 'memset' function. Inspect the first argument.
/root/Bootloader/BMFS/bmfs.c	483	note	V575 The potential null pointer is passed into 'rewind' function. Inspect the first argument.
/root/Bootloader/BMFS/bmfs.c	553	err	V595 The 'disk' pointer was utilized before it was verified against nullptr. Check lines: 553, 576.
/root/Bootloader/BMFS/bmfs.c	690	note	V576 Incorrect format. Consider checking the second actual argument of the 'printf' function. The SIGNED integer type argument is expected.
/root/Kernel/kernel.c	28	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (void *) 0x400000
/root/Kernel/kernel.c	29	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (void *) 0x500000
/root/Kernel/drivers/screen.c	10	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (uint8_t *) 0xB8000
/root/Kernel/drivers/screen.c	69	note	V602 Consider inspecting the 'getCursor() % width > 2' expression. '>' possibly should be replaced with '>>'.
/root/Kernel/prebuilt/naiveConsole.c	9	warn	V1009 Check the array initialization. Only the first element is initialized explicitly. The rest elements are initialized with zeros.
/root/Kernel/prebuilt/naiveConsole.c	10	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (uint8_t *) 0xB8000
/root/Kernel/prebuilt/naiveConsole.c	11	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (uint8_t *) 0xB8000
/root/Kernel/prebuilt/naiveConsole.c	51	warn	V547 Expression '* currentVideo != 0xB8000' is always true. The value range of unsigned char type: [0, 255].

// Todas observaciones sobre archivos prebuilt. No vamos a modificarlos para mantener la estructura original.

/root/Userland/SampleCodeModule/shell.c	91	note	V776 Potentially infinite loop.

//Intencional

/root/Userland/SampleCodeModule/sampleCodeModule.c	8	note	V566 The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000
/root/Userland/SampleCodeModule/sampleCodeModule.c	8	warn	V707 Giving short names to global variables is considered to be bad practice. It is suggested to rename 'v' variable.

// Prebuilt

/root/Userland/SampleCodeModule/libraries/stdlib.c	120	err	V558 Function returns the pointer to temporary local object: retString.

// Mismo error que en CPP.

/root/Userland/SampleCodeModule/misc/commands.c	223	err	V609 Divide by zero. Denominator '0' == 0.

// Intencional

/root/Userland/SampleCodeModule/tests/test_util.c	46	note	V776 Potentially infinite loop.

// Intencional

/root/Userland/SampleCodeModule/tests/test_sync.c	59	warn	V618 It's dangerous to call the 'printf' function in such a manner, as the line being passed could contain format specification. The example of the safe code: printf("%s", str);

// Es cierto, pero la función que retorna el string es itoa, que estamos seguros que no producirá este error.

/root/Userland/SampleCodeModule/tests/test_sync.c	80	warn	V522 There might be dereferencing of a potential null pointer 'argv1'. Check lines: 80, 77.
/root/Userland/SampleCodeModule/tests/test_sync.c	100	warn	V522 There might be dereferencing of a potential null pointer 'argv2'. Check lines: 100, 96.

// Se evalua que no sea NULL. Creo que está controlado.

/root/Userland/SampleCodeModule/tests/test_sync.c	79	err	V773 The function was exited without releasing the 'argv1' pointer. A memory leak is possible.

// Retorna porque el malloc falló y no tiene memoria alocada. Por ende no hay nada para liberar

/root/Userland/SampleCodeModule/tests/test_sync.c	81	err	V557 Array overrun is possible. The '1' index is pointing beyond array bound.
/root/Userland/SampleCodeModule/tests/test_sync.c	82	err	V557 Array overrun is possible. The '2' index is pointing beyond array bound.
/root/Userland/SampleCodeModule/tests/test_sync.c	83	err	V557 Array overrun is possible. The '3' index is pointing beyond array bound.

// No creo que ocurra dado que si no hay memoria, la función sale.

/root/Userland/SampleCodeModule/tests/test_sync.c	84	warn	V512 A call of the 'createProcess' function will lead to overflow of the buffer 'argv1'.
/root/Userland/SampleCodeModule/tests/test_sync.c	89	warn	V557 Array overrun is possible. The value of 'p' index could reach 3.

// argv esta inicializado como un arreglo de 4 posiciones, está bien que llegue a 3

/root/Userland/SampleCodeModule/tests/test_sync.c	98	err	V773 The function was exited without releasing the 'argv2' pointer. A memory leak is possible.
/root/Userland/SampleCodeModule/tests/test_sync.c	101	err	V557 Array overrun is possible. The '1' index is pointing beyond array bound.
/root/Userland/SampleCodeModule/tests/test_sync.c	102	err	V557 Array overrun is possible. The '2' index is pointing beyond array bound.
/root/Userland/SampleCodeModule/tests/test_sync.c	103	err	V557 Array overrun is possible. The '3' index is pointing beyond array bound.
/root/Userland/SampleCodeModule/tests/test_sync.c	104	warn	V512 A call of the 'createProcess' function will lead to overflow of the buffer 'argv2'.

// Mismo análisis de antes.
